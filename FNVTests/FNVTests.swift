//
//  FNVTests.swift
//  FNVTests
//
//  Created by Cédric Ponchy on 29/07/16.
//  Copyright © 2016 Cédric Ponchy. All rights reserved.
//

import XCTest
@testable import FNV

class FNVTests: XCTestCase {
    
    override func setUp() {
        super.setUp()
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }
    
    override func tearDown() {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
        super.tearDown()
    }
    
    func TEST(str: String, _ times: Int = 1) -> UInt {
        var i :Int = 0
        var result : String = ""
        
        while i < times {
            result += str
            i+=1
        }
        return FNV_64_hash(result)
    }
    
    func TEST0(str: String) -> UInt {
        var a = [UInt8]()
        for c: UInt8 in str.utf8 {
            a.append(c)
        }
        a.append(0)
        return FNV_64_hash(a)
    }
    
    func TESTA(src: [UInt8], _ times: Int = 1) -> UInt {
        var i: Int = 0
        var a = [UInt8]()
        
        while i < times {
            if a.count == 0 {
                a = src
            } else {
                let tmp = a + src
                a = tmp
            }
            i+=1
        }

        return FNV_64_hash(a)
    }
    
    func TEST1a(str: String, _ times: Int = 1) -> UInt {
        var i :Int = 0
        var result : String = ""
        
        while i < times {
            result += str
            i+=1
        }
        return FNVa_64_hash(result)
    }
    
    func TEST1a0(str: String) -> UInt {
        var a = [UInt8]()
        for c: UInt8 in str.utf8 {
            a.append(c)
        }
        a.append(0)
        return FNVa_64_hash(a)
    }
    
    func TEST1aA(src: [UInt8], _ times: Int = 1) -> UInt {
        var i: Int = 0
        var a = [UInt8]()
        
        while i < times {
            if a.count == 0 {
                a = src
            } else {
                let tmp = a + src
                a = tmp
            }
            i+=1
        }
        
        return FNVa_64_hash(a)
    }

    func testFNV_64_hash_0() {
        let s = "afoobar"
        let a : [UInt8] = Array(s.utf8)
        
        XCTAssertTrue( FNV_64_hash(a) == FNV_64_hash(s) )
        XCTAssertTrue( s.lengthOfBytesUsingEncoding(NSUTF8StringEncoding) == 7)
        XCTAssertTrue( a.count == 7)
    }
    
    func testFNV_64_hash_1() {
        let s = "🐥"
        let a : [UInt8] = Array(s.utf8)
        
        print("********** \(a.count) **********")
        XCTAssertTrue( FNV_64_hash(a) == FNV_64_hash(s) )
    }
    
    func testFNV1_64bits() {
        XCTAssertTrue(TEST("") == 0xcbf29ce484222325)
        XCTAssertTrue(TEST("a") == 0xaf63bd4c8601b7be)
        XCTAssertTrue(TEST("b") == 0xaf63bd4c8601b7bd)
        XCTAssertTrue(TEST("c") == 0xaf63bd4c8601b7bc)
        XCTAssertTrue(TEST("d") == 0xaf63bd4c8601b7bb)
        XCTAssertTrue(TEST("e") == 0xaf63bd4c8601b7ba)
        XCTAssertTrue(TEST("f") == 0xaf63bd4c8601b7b9)
        XCTAssertTrue(TEST("fo") == 0x08326207b4eb2f34)
        XCTAssertTrue(TEST("foo") == 0xd8cbc7186ba13533)
        XCTAssertTrue(TEST("foob") == 0x0378817ee2ed65cb)
        XCTAssertTrue(TEST("fooba") == 0xd329d59b9963f790)
        XCTAssertTrue(TEST("foobar") == 0x340d8765a4dda9c2)
        XCTAssertTrue(TEST0("") == 0xaf63bd4c8601b7df)
        XCTAssertTrue(TEST0("a") == 0x08326707b4eb37da)
        XCTAssertTrue(TEST0("b") == 0x08326607b4eb3627)
        XCTAssertTrue(TEST0("c") == 0x08326507b4eb3474)
        XCTAssertTrue(TEST0("d") == 0x08326407b4eb32c1)
        XCTAssertTrue(TEST0("e") == 0x08326307b4eb310e)
        XCTAssertTrue(TEST0("f") == 0x08326207b4eb2f5b)
        XCTAssertTrue(TEST0("fo") == 0xd8cbc7186ba1355c)
        XCTAssertTrue(TEST0("foo") == 0x0378817ee2ed65a9)
        XCTAssertTrue(TEST0("foob") == 0xd329d59b9963f7f1)
        XCTAssertTrue(TEST0("fooba") == 0x340d8765a4dda9b0)
        XCTAssertTrue(TEST0("foobar") == 0x50a6d3b724a774a6)
        XCTAssertTrue(TEST("ch") == 0x08326507b4eb341c)
        XCTAssertTrue(TEST("cho") == 0xd8d5c8186ba98bfb)
        XCTAssertTrue(TEST("chon") == 0x1ccefc7ef118dbef)
        XCTAssertTrue(TEST("chong") == 0x0c92fab3ad3db77a)
        XCTAssertTrue(TEST("chongo") == 0x9b77794f5fdec421)
        XCTAssertTrue(TEST("chongo ") == 0x0ac742dfe7874433)
        XCTAssertTrue(TEST("chongo w") == 0xd7dad5766ad8e2de)
        XCTAssertTrue(TEST("chongo wa") == 0xa1bb96378e897f5b)
        XCTAssertTrue(TEST("chongo was") == 0x5b3f9b6733a367d2)
        XCTAssertTrue(TEST("chongo was ") == 0xb07ce25cbea969f6)
        XCTAssertTrue(TEST("chongo was h") == 0x8d9e9997f9df0d6a)
        XCTAssertTrue(TEST("chongo was he") == 0x838c673d9603cb7b)
        XCTAssertTrue(TEST("chongo was her") == 0x8b5ee8a5e872c273)
        XCTAssertTrue(TEST("chongo was here") == 0x4507c4e9fb00690c)
        XCTAssertTrue(TEST("chongo was here!") == 0x4c9ca59581b27f45)
        XCTAssertTrue(TEST("chongo was here!\n") == 0xe0aca20b624e4235)
        XCTAssertTrue(TEST0("ch") == 0xd8d5c8186ba98b94)
        XCTAssertTrue(TEST0("cho") == 0x1ccefc7ef118db81)
        XCTAssertTrue(TEST0("chon") == 0x0c92fab3ad3db71d)
        XCTAssertTrue(TEST0("chong") == 0x9b77794f5fdec44e)
        XCTAssertTrue(TEST0("chongo") == 0x0ac742dfe7874413)
        XCTAssertTrue(TEST0("chongo ") == 0xd7dad5766ad8e2a9)
        XCTAssertTrue(TEST0("chongo w") == 0xa1bb96378e897f3a)
        XCTAssertTrue(TEST0("chongo wa") == 0x5b3f9b6733a367a1)
        XCTAssertTrue(TEST0("chongo was") == 0xb07ce25cbea969d6)
        XCTAssertTrue(TEST0("chongo was ") == 0x8d9e9997f9df0d02)
        XCTAssertTrue(TEST0("chongo was h") == 0x838c673d9603cb1e)
        XCTAssertTrue(TEST0("chongo was he") == 0x8b5ee8a5e872c201)
        XCTAssertTrue(TEST0("chongo was her") == 0x4507c4e9fb006969)
        XCTAssertTrue(TEST0("chongo was here") == 0x4c9ca59581b27f64)
        XCTAssertTrue(TEST0("chongo was here!") == 0xe0aca20b624e423f)
        XCTAssertTrue(TEST0("chongo was here!\n") == 0x13998e580afa800f)
        XCTAssertTrue(TEST("cu") == 0x08326507b4eb3401)
        XCTAssertTrue(TEST("cur") == 0xd8d5ad186ba95dc1)
        XCTAssertTrue(TEST("curd") == 0x1c72e17ef0ca4e97)
        XCTAssertTrue(TEST("curds") == 0x2183c1b327c38ae6)
        XCTAssertTrue(TEST("curds ") == 0xb66d096c914504f2)
        XCTAssertTrue(TEST("curds a") == 0x404bf57ad8476757)
        XCTAssertTrue(TEST("curds an") == 0x887976bd815498bb)
        XCTAssertTrue(TEST("curds and") == 0x3afd7f02c2bf85a5)
        XCTAssertTrue(TEST("curds and ") == 0xfc4476b0eb70177f)
        XCTAssertTrue(TEST("curds and w") == 0x186d2da00f77ecba)
        XCTAssertTrue(TEST("curds and wh") == 0xf97140fa48c74066)
        XCTAssertTrue(TEST("curds and whe") == 0xa2b1cf49aa926d37)
        XCTAssertTrue(TEST("curds and whey") == 0x0690712cd6cf940c)
        XCTAssertTrue(TEST("curds and whey\n") == 0xf7045b3102b8906e)
        XCTAssertTrue(TEST0("cu") == 0xd8d5ad186ba95db3)
        XCTAssertTrue(TEST0("cur") == 0x1c72e17ef0ca4ef3)
        XCTAssertTrue(TEST0("curd") == 0x2183c1b327c38a95)
        XCTAssertTrue(TEST0("curds") == 0xb66d096c914504d2)
        XCTAssertTrue(TEST0("curds ") == 0x404bf57ad8476736)
        XCTAssertTrue(TEST0("curds a") == 0x887976bd815498d5)
        XCTAssertTrue(TEST0("curds an") == 0x3afd7f02c2bf85c1)
        XCTAssertTrue(TEST0("curds and") == 0xfc4476b0eb70175f)
        XCTAssertTrue(TEST0("curds and ") == 0x186d2da00f77eccd)
        XCTAssertTrue(TEST0("curds and w") == 0xf97140fa48c7400e)
        XCTAssertTrue(TEST0("curds and wh") == 0xa2b1cf49aa926d52)
        XCTAssertTrue(TEST0("curds and whe") == 0x0690712cd6cf9475)
        XCTAssertTrue(TEST0("curds and whey") == 0xf7045b3102b89064)
        XCTAssertTrue(TEST0("curds and whey\n") == 0x74f762479f9d6aea)
        XCTAssertTrue(TEST("hi") == 0x08326007b4eb2b9c)
        XCTAssertTrue(TEST0("hi") == 0xd8c4c9186b9b1a14)
        XCTAssertTrue(TEST("hello") == 0x7b495389bdbdd4c7)
        XCTAssertTrue(TEST0("hello") == 0x3b6dba0d69908e25)
        XCTAssertTrue(TESTA([0xff, 0x00, 0x00, 0x01]) == 0xd6b2b17bf4b71261)
        XCTAssertTrue(TESTA([0x01, 0x00, 0x00, 0xff]) == 0x447bfb7f98e615b5)
        XCTAssertTrue(TESTA([0xff, 0x00, 0x00, 0x02]) == 0xd6b2b17bf4b71262)
        XCTAssertTrue(TESTA([0x02, 0x00, 0x00, 0xff]) == 0x3bd2807f93fe1660)
        XCTAssertTrue(TESTA([0xff, 0x00, 0x00, 0x03]) == 0xd6b2b17bf4b71263)
        XCTAssertTrue(TESTA([0x03, 0x00, 0x00, 0xff]) == 0x3329057f8f16170b)
        XCTAssertTrue(TESTA([0xff, 0x00, 0x00, 0x04]) == 0xd6b2b17bf4b71264)
        XCTAssertTrue(TESTA([0x04, 0x00, 0x00, 0xff]) == 0x2a7f8a7f8a2e19b6)
        XCTAssertTrue(TESTA([0x40, 0x51, 0x4e, 0x44]) == 0x23d3767e64b2f98a)
        XCTAssertTrue(TESTA([0x44, 0x4e, 0x51, 0x40]) == 0xff768d7e4f9d86a4)
        XCTAssertTrue(TESTA([0x40, 0x51, 0x4e, 0x4a]) == 0x23d3767e64b2f984)
        XCTAssertTrue(TESTA([0x4a, 0x4e, 0x51, 0x40]) == 0xccd1837e334e4aa6)
        XCTAssertTrue(TESTA([0x40, 0x51, 0x4e, 0x54]) == 0x23d3767e64b2f99a)
        XCTAssertTrue(TESTA([0x54, 0x4e, 0x51, 0x40]) == 0x7691fd7e028f6754)
        XCTAssertTrue(TEST("127.0.0.1") == 0x34ad3b1041204318)
        XCTAssertTrue(TEST0("127.0.0.1") == 0xa29e749ea9d201c8)
        XCTAssertTrue(TEST("127.0.0.2") == 0x34ad3b104120431b)
        XCTAssertTrue(TEST0("127.0.0.2") == 0xa29e779ea9d206e1)
        XCTAssertTrue(TEST("127.0.0.3") == 0x34ad3b104120431a)
        XCTAssertTrue(TEST0("127.0.0.3") == 0xa29e769ea9d2052e)
        XCTAssertTrue(TEST("64.81.78.68") == 0x02a17ebca4aa3497)
        XCTAssertTrue(TEST0("64.81.78.68") == 0x229ef18bcd375c95)
        XCTAssertTrue(TEST("64.81.78.74") == 0x02a17dbca4aa32c8)
        XCTAssertTrue(TEST0("64.81.78.74") == 0x229b6f8bcd3449d8)
        XCTAssertTrue(TEST("64.81.78.84") == 0x02a184bca4aa3ed5)
        XCTAssertTrue(TEST0("64.81.78.84") == 0x22b3618bcd48c3ef)
        XCTAssertTrue(TEST("feedface") == 0x5c2c346706186f36)
        XCTAssertTrue(TEST0("feedface") == 0xb78c410f5b84f8c2)
        XCTAssertTrue(TEST("feedfacedaffdeed") == 0xed9478212b267395)
        XCTAssertTrue(TEST0("feedfacedaffdeed") == 0xd9bbb55c5256662f)
        XCTAssertTrue(TEST("feedfacedeadbeef") == 0x8c54f0203249438a)
        XCTAssertTrue(TEST0("feedfacedeadbeef") == 0xbd9790b5727dc37e)
        XCTAssertTrue(TEST("line 1\nline 2\nline 3") == 0xa64e5f36c9e2b0e3)
        XCTAssertTrue(TEST("chongo <Landon Curt Noll> /\\../\\") == 0x8fd0680da3088a04)
        XCTAssertTrue(TEST0("chongo <Landon Curt Noll> /\\../\\") == 0x67aad32c078284cc)
        XCTAssertTrue(TEST("chongo (Landon Curt Noll) /\\../\\") == 0xb37d55d81c57b331)
        XCTAssertTrue(TEST0("chongo (Landon Curt Noll) /\\../\\") == 0x55ac0f3829057c43)
        XCTAssertTrue(TEST("http://antwrp.gsfc.nasa.gov/apod/astropix.html") == 0xcb27f4b8e1b6cc20)
        XCTAssertTrue(TEST("http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash") == 0x26caf88bcbef2d19)
        XCTAssertTrue(TEST("http://epod.usra.edu/") == 0x8e6e063b97e61b8f)
        XCTAssertTrue(TEST("http://exoplanet.eu/") == 0xb42750f7f3b7c37e)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/cam3/") == 0xf3c6ba64cf7ca99b)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/cams/HMcam/") == 0xebfb69b427ea80fe)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/kilauea/update/deformation.html") == 0x39b50c3ed970f46c)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/kilauea/update/images.html") == 0x5b9b177aa3eb3e8a)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/kilauea/update/maps.html") == 0x6510063ecf4ec903)
        XCTAssertTrue(TEST("http://hvo.wr.usgs.gov/volcanowatch/current_issue.html") == 0x2b3bbd2c00797c7a)
        XCTAssertTrue(TEST("http://neo.jpl.nasa.gov/risk/") == 0xf1d6204ff5cb4aa7)
        XCTAssertTrue(TEST("http://norvig.com/21-days.html") == 0x4836e27ccf099f38)
        XCTAssertTrue(TEST("http://primes.utm.edu/curios/home.php") == 0x82efbb0dd073b44d)
        XCTAssertTrue(TEST("http://slashdot.org/") == 0x4a80c282ffd7d4c6)
        XCTAssertTrue(TEST("http://tux.wr.usgs.gov/Maps/155.25-19.5.html") == 0x305d1a9c9ee43bdf)
        XCTAssertTrue(TEST("http://volcano.wr.usgs.gov/kilaueastatus.php") == 0x15c366948ffc6997)
        XCTAssertTrue(TEST("http://www.avo.alaska.edu/activity/Redoubt.php") == 0x80153ae218916e7b)
        XCTAssertTrue(TEST("http://www.dilbert.com/fast/") == 0xfa23e2bdf9e2a9e1)
        XCTAssertTrue(TEST("http://www.fourmilab.ch/gravitation/orbits/") == 0xd47e8d8a2333c6de)
        XCTAssertTrue(TEST("http://www.fpoa.net/") == 0x7e128095f688b056)
        XCTAssertTrue(TEST("http://www.ioccc.org/index.html") == 0x2f5356890efcedab)
        XCTAssertTrue(TEST("http://www.isthe.com/cgi-bin/number.cgi") == 0x95c2b383014f55c5)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/bio.html") == 0x4727a5339ce6070f)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/index.html") == 0xb0555ecd575108e9)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/src/calc/lucas-calc") == 0x48d785770bb4af37)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/astro/venus2004.html") == 0x09d4701c12af02b1)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/astro/vita.html") == 0x79f031e78f3cf62e)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/comp/c/expert.html") == 0x52a1ee85db1b5a94)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/comp/calc/index.html") == 0x6bd95b2eb37fa6b8)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/comp/fnv/index.html") == 0x74971b7077aef85d)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/math/number/howhigh.html") == 0xb4e4fae2ffcc1aad)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/math/number/number.html") == 0x2bd48bd898b8f63a)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/math/prime/mersenne.html") == 0xe9966ac1556257f6)
        XCTAssertTrue(TEST("http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest") == 0x92a3d1cd078ba293)
        XCTAssertTrue(TEST("http://www.lavarnd.org/cgi-bin/corpspeak.cgi") == 0xf81175a482e20ab8)
        XCTAssertTrue(TEST("http://www.lavarnd.org/cgi-bin/haiku.cgi") == 0x5bbb3de722e73048)
        XCTAssertTrue(TEST("http://www.lavarnd.org/cgi-bin/rand-none.cgi") == 0x6b4f363492b9f2be)
        XCTAssertTrue(TEST("http://www.lavarnd.org/cgi-bin/randdist.cgi") == 0xc2d559df73d59875)
        XCTAssertTrue(TEST("http://www.lavarnd.org/index.html") == 0xf75f62284bc7a8c2)
        XCTAssertTrue(TEST("http://www.lavarnd.org/what/nist-test.html") == 0xda8dd8e116a9f1cc)
        XCTAssertTrue(TEST("http://www.macosxhints.com/") == 0xbdc1e6ab76057885)
        XCTAssertTrue(TEST("http://www.mellis.com/") == 0xfec6a4238a1224a0)
        XCTAssertTrue(TEST("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm") == 0xc03f40f3223e290e)
        XCTAssertTrue(TEST("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm") == 0x1ed21673466ffda9)
        XCTAssertTrue(TEST("http://www.paulnoll.com/") == 0xdf70f906bb0dd2af)
        XCTAssertTrue(TEST("http://www.pepysdiary.com/") == 0xf3dcda369f2af666)
        XCTAssertTrue(TEST("http://www.sciencenews.org/index/home/activity/view") == 0x9ebb11573cdcebde)
        XCTAssertTrue(TEST("http://www.skyandtelescope.com/") == 0x81c72d9077fedca0)
        XCTAssertTrue(TEST("http://www.sput.nl/~rob/sirius.html") == 0x0ec074a31be5fb15)
        XCTAssertTrue(TEST("http://www.systemexperts.com/") == 0x2a8b3280b6c48f20)
        XCTAssertTrue(TEST("http://www.tq-international.com/phpBB3/index.php") == 0xfd31777513309344)
        XCTAssertTrue(TEST("http://www.travelquesttours.com/index.htm") == 0x194534a86ad006b6)
        XCTAssertTrue(TEST("http://www.wunderground.com/global/stations/89606.html") == 0x3be6fdf46e0cfe12)
        XCTAssertTrue(TEST("21701",10) == 0x017cc137a07eb057)
        XCTAssertTrue(TEST("M21701",10) == 0x9428fc6e7d26b54d)
        XCTAssertTrue(TEST("2^21701-1",10) == 0x9aaa2e3603ef8ad7)
        XCTAssertTrue(TESTA([0x54, 0xc5],10) == 0x82c6d3f3a0ccdf7d)
        XCTAssertTrue(TESTA([0xc5, 0x54],10) == 0xc86eeea00cf09b65)
        XCTAssertTrue(TEST("23209",10) == 0x705f8189dbb58299)
        XCTAssertTrue(TEST("M23209",10) == 0x415a7f554391ca69)
        XCTAssertTrue(TEST("2^23209-1",10) == 0xcfe3d49fa2bdc555)
        XCTAssertTrue(TESTA([0x5a, 0xa9],10) == 0xf0f9c56039b25191)
        XCTAssertTrue(TESTA([0xa9, 0x5a],10) == 0x7075cb6abd1d32d9)
        XCTAssertTrue(TEST("391581216093",10) == 0x43c94e2c8b277509)
        XCTAssertTrue(TEST("391581*2^216093-1",10) == 0x3cbfd4e4ea670359)
        XCTAssertTrue(TESTA([0x05, 0xf9, 0x9d, 0x03, 0x4c, 0x81],10) == 0xc05887810f4d019d)
        XCTAssertTrue(TEST("FEDCBA9876543210",10) == 0x14468ff93ac22dc5)
        XCTAssertTrue(TESTA([0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10],10) == 0xebed699589d99c05)
        XCTAssertTrue(TEST("EFCDAB8967452301",10) == 0x6d99f6df321ca5d5)
        XCTAssertTrue(TESTA([0xef, 0xcd, 0xab, 0x89, 0x67, 0x45, 0x23, 0x01],10) == 0x0cd410d08c36d625)
        XCTAssertTrue(TEST("0123456789ABCDEF",10) == 0xef1b2a2c86831d35)
        XCTAssertTrue(TESTA([0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef],10) == 0x3b349c4d69ee5f05)
        XCTAssertTrue(TEST("1032547698BADCFE",10) == 0x55248ce88f45f035)
        XCTAssertTrue(TESTA([0x10, 0x32, 0x54, 0x76, 0x98, 0xba, 0xdc, 0xfe],10) == 0xaa69ca6a18a4c885)
        XCTAssertTrue(TESTA([0x00],500) == 0x1fe3fce62bd816b5)
        XCTAssertTrue(TESTA([0x07],500) == 0x0289a488a8df69d9)
        XCTAssertTrue(TEST("~",500) == 0x15e96e1613df98b5)
        XCTAssertTrue(TESTA([0x7f],500) == 0xe6be57375ad89b99)
    }
    
func testFNV1a_64bits() {
    XCTAssertTrue(TEST1a("") == 0xcbf29ce484222325)
    XCTAssertTrue(TEST1a("a") == 0xaf63dc4c8601ec8c)
    XCTAssertTrue(TEST1a("b") == 0xaf63df4c8601f1a5)
    XCTAssertTrue(TEST1a("c") == 0xaf63de4c8601eff2)
    XCTAssertTrue(TEST1a("d") == 0xaf63d94c8601e773)
    XCTAssertTrue(TEST1a("e") == 0xaf63d84c8601e5c0)
    XCTAssertTrue(TEST1a("f") == 0xaf63db4c8601ead9)
    XCTAssertTrue(TEST1a("fo") == 0x08985907b541d342)
    XCTAssertTrue(TEST1a("foo") == 0xdcb27518fed9d577)
    XCTAssertTrue(TEST1a("foob") == 0xdd120e790c2512af)
    XCTAssertTrue(TEST1a("fooba") == 0xcac165afa2fef40a)
    XCTAssertTrue(TEST1a("foobar") == 0x85944171f73967e8)
    XCTAssertTrue(TEST1a0("") == 0xaf63bd4c8601b7df)
    XCTAssertTrue(TEST1a0("a") == 0x089be207b544f1e4)
    XCTAssertTrue(TEST1a0("b") == 0x08a61407b54d9b5f)
    XCTAssertTrue(TEST1a0("c") == 0x08a2ae07b54ab836)
    XCTAssertTrue(TEST1a0("d") == 0x0891b007b53c4869)
    XCTAssertTrue(TEST1a0("e") == 0x088e4a07b5396540)
    XCTAssertTrue(TEST1a0("f") == 0x08987c07b5420ebb)
    XCTAssertTrue(TEST1a0("fo") == 0xdcb28a18fed9f926)
    XCTAssertTrue(TEST1a0("foo") == 0xdd1270790c25b935)
    XCTAssertTrue(TEST1a0("foob") == 0xcac146afa2febf5d)
    XCTAssertTrue(TEST1a0("fooba") == 0x8593d371f738acfe)
    XCTAssertTrue(TEST1a0("foobar") == 0x34531ca7168b8f38)
    XCTAssertTrue(TEST1a("ch") == 0x08a25607b54a22ae)
    XCTAssertTrue(TEST1a("cho") == 0xf5faf0190cf90df3)
    XCTAssertTrue(TEST1a("chon") == 0xf27397910b3221c7)
    XCTAssertTrue(TEST1a("chong") == 0x2c8c2b76062f22e0)
    XCTAssertTrue(TEST1a("chongo") == 0xe150688c8217b8fd)
    XCTAssertTrue(TEST1a("chongo ") == 0xf35a83c10e4f1f87)
    XCTAssertTrue(TEST1a("chongo w") == 0xd1edd10b507344d0)
    XCTAssertTrue(TEST1a("chongo wa") == 0x2a5ee739b3ddb8c3)
    XCTAssertTrue(TEST1a("chongo was") == 0xdcfb970ca1c0d310)
    XCTAssertTrue(TEST1a("chongo was ") == 0x4054da76daa6da90)
    XCTAssertTrue(TEST1a("chongo was h") == 0xf70a2ff589861368)
    XCTAssertTrue(TEST1a("chongo was he") == 0x4c628b38aed25f17)
    XCTAssertTrue(TEST1a("chongo was her") == 0x9dd1f6510f78189f)
    XCTAssertTrue(TEST1a("chongo was here") == 0xa3de85bd491270ce)
    XCTAssertTrue(TEST1a("chongo was here!") == 0x858e2fa32a55e61d)
    XCTAssertTrue(TEST1a("chongo was here!\n") == 0x46810940eff5f915)
    XCTAssertTrue(TEST1a0("ch") == 0xf5fadd190cf8edaa)
    XCTAssertTrue(TEST1a0("cho") == 0xf273ed910b32b3e9)
    XCTAssertTrue(TEST1a0("chon") == 0x2c8c5276062f6525)
    XCTAssertTrue(TEST1a0("chong") == 0xe150b98c821842a0)
    XCTAssertTrue(TEST1a0("chongo") == 0xf35aa3c10e4f55e7)
    XCTAssertTrue(TEST1a0("chongo ") == 0xd1ed680b50729265)
    XCTAssertTrue(TEST1a0("chongo w") == 0x2a5f0639b3dded70)
    XCTAssertTrue(TEST1a0("chongo wa") == 0xdcfbaa0ca1c0f359)
    XCTAssertTrue(TEST1a0("chongo was") == 0x4054ba76daa6a430)
    XCTAssertTrue(TEST1a0("chongo was ") == 0xf709c7f5898562b0)
    XCTAssertTrue(TEST1a0("chongo was h") == 0x4c62e638aed2f9b8)
    XCTAssertTrue(TEST1a0("chongo was he") == 0x9dd1a8510f779415)
    XCTAssertTrue(TEST1a0("chongo was her") == 0xa3de2abd4911d62d)
    XCTAssertTrue(TEST1a0("chongo was here") == 0x858e0ea32a55ae0a)
    XCTAssertTrue(TEST1a0("chongo was here!") == 0x46810f40eff60347)
    XCTAssertTrue(TEST1a0("chongo was here!\n") == 0xc33bce57bef63eaf)
    XCTAssertTrue(TEST1a("cu") == 0x08a24307b54a0265)
    XCTAssertTrue(TEST1a("cur") == 0xf5b9fd190cc18d15)
    XCTAssertTrue(TEST1a("curd") == 0x4c968290ace35703)
    XCTAssertTrue(TEST1a("curds") == 0x07174bd5c64d9350)
    XCTAssertTrue(TEST1a("curds ") == 0x5a294c3ff5d18750)
    XCTAssertTrue(TEST1a("curds a") == 0x05b3c1aeb308b843)
    XCTAssertTrue(TEST1a("curds an") == 0xb92a48da37d0f477)
    XCTAssertTrue(TEST1a("curds and") == 0x73cdddccd80ebc49)
    XCTAssertTrue(TEST1a("curds and ") == 0xd58c4c13210a266b)
    XCTAssertTrue(TEST1a("curds and w") == 0xe78b6081243ec194)
    XCTAssertTrue(TEST1a("curds and wh") == 0xb096f77096a39f34)
    XCTAssertTrue(TEST1a("curds and whe") == 0xb425c54ff807b6a3)
    XCTAssertTrue(TEST1a("curds and whey") == 0x23e520e2751bb46e)
    XCTAssertTrue(TEST1a("curds and whey\n") == 0x1a0b44ccfe1385ec)
    XCTAssertTrue(TEST1a0("cu") == 0xf5ba4b190cc2119f)
    XCTAssertTrue(TEST1a0("cur") == 0x4c962690ace2baaf)
    XCTAssertTrue(TEST1a0("curd") == 0x0716ded5c64cda19)
    XCTAssertTrue(TEST1a0("curds") == 0x5a292c3ff5d150f0)
    XCTAssertTrue(TEST1a0("curds ") == 0x05b3e0aeb308ecf0)
    XCTAssertTrue(TEST1a0("curds a") == 0xb92a5eda37d119d9)
    XCTAssertTrue(TEST1a0("curds an") == 0x73ce41ccd80f6635)
    XCTAssertTrue(TEST1a0("curds and") == 0xd58c2c132109f00b)
    XCTAssertTrue(TEST1a0("curds and ") == 0xe78baf81243f47d1)
    XCTAssertTrue(TEST1a0("curds and w") == 0xb0968f7096a2ee7c)
    XCTAssertTrue(TEST1a0("curds and wh") == 0xb425a84ff807855c)
    XCTAssertTrue(TEST1a0("curds and whe") == 0x23e4e9e2751b56f9)
    XCTAssertTrue(TEST1a0("curds and whey") == 0x1a0b4eccfe1396ea)
    XCTAssertTrue(TEST1a0("curds and whey\n") == 0x54abd453bb2c9004)
    XCTAssertTrue(TEST1a("hi") == 0x08ba5f07b55ec3da)
    XCTAssertTrue(TEST1a0("hi") == 0x337354193006cb6e)
    XCTAssertTrue(TEST1a("hello") == 0xa430d84680aabd0b)
    XCTAssertTrue(TEST1a0("hello") == 0xa9bc8acca21f39b1)
    XCTAssertTrue(TEST1aA([0xff, 0x00, 0x00, 0x01]) == 0x6961196491cc682d)
    XCTAssertTrue(TEST1aA([0x01, 0x00, 0x00, 0xff]) == 0xad2bb1774799dfe9)
    XCTAssertTrue(TEST1aA([0xff, 0x00, 0x00, 0x02]) == 0x6961166491cc6314)
    XCTAssertTrue(TEST1aA([0x02, 0x00, 0x00, 0xff]) == 0x8d1bb3904a3b1236)
    XCTAssertTrue(TEST1aA([0xff, 0x00, 0x00, 0x03]) == 0x6961176491cc64c7)
    XCTAssertTrue(TEST1aA([0x03, 0x00, 0x00, 0xff]) == 0xed205d87f40434c7)
    XCTAssertTrue(TEST1aA([0xff, 0x00, 0x00, 0x04]) == 0x6961146491cc5fae)
    XCTAssertTrue(TEST1aA([0x04, 0x00, 0x00, 0xff]) == 0xcd3baf5e44f8ad9c)
    XCTAssertTrue(TEST1aA([0x40, 0x51, 0x4e, 0x44]) == 0xe3b36596127cd6d8)
    XCTAssertTrue(TEST1aA([0x44, 0x4e, 0x51, 0x40]) == 0xf77f1072c8e8a646)
    XCTAssertTrue(TEST1aA([0x40, 0x51, 0x4e, 0x4a]) == 0xe3b36396127cd372)
    XCTAssertTrue(TEST1aA([0x4a, 0x4e, 0x51, 0x40]) == 0x6067dce9932ad458)
    XCTAssertTrue(TEST1aA([0x40, 0x51, 0x4e, 0x54]) == 0xe3b37596127cf208)
    XCTAssertTrue(TEST1aA([0x54, 0x4e, 0x51, 0x40]) == 0x4b7b10fa9fe83936)
    XCTAssertTrue(TEST1a("127.0.0.1") == 0xaabafe7104d914be)
    XCTAssertTrue(TEST1a0("127.0.0.1") == 0xf4d3180b3cde3eda)
    XCTAssertTrue(TEST1a("127.0.0.2") == 0xaabafd7104d9130b)
    XCTAssertTrue(TEST1a0("127.0.0.2") == 0xf4cfb20b3cdb5bb1)
    XCTAssertTrue(TEST1a("127.0.0.3") == 0xaabafc7104d91158)
    XCTAssertTrue(TEST1a0("127.0.0.3") == 0xf4cc4c0b3cd87888)
    XCTAssertTrue(TEST1a("64.81.78.68") == 0xe729bac5d2a8d3a7)
    XCTAssertTrue(TEST1a0("64.81.78.68") == 0x74bc0524f4dfa4c5)
    XCTAssertTrue(TEST1a("64.81.78.74") == 0xe72630c5d2a5b352)
    XCTAssertTrue(TEST1a0("64.81.78.74") == 0x6b983224ef8fb456)
    XCTAssertTrue(TEST1a("64.81.78.84") == 0xe73042c5d2ae266d)
    XCTAssertTrue(TEST1a0("64.81.78.84") == 0x8527e324fdeb4b37)
    XCTAssertTrue(TEST1a("feedface") == 0x0a83c86fee952abc)
    XCTAssertTrue(TEST1a0("feedface") == 0x7318523267779d74)
    XCTAssertTrue(TEST1a("feedfacedaffdeed") == 0x3e66d3d56b8caca1)
    XCTAssertTrue(TEST1a0("feedfacedaffdeed") == 0x956694a5c0095593)
    XCTAssertTrue(TEST1a("feedfacedeadbeef") == 0xcac54572bb1a6fc8)
    XCTAssertTrue(TEST1a0("feedfacedeadbeef") == 0xa7a4c9f3edebf0d8)
    XCTAssertTrue(TEST1a("line 1\nline 2\nline 3") == 0x7829851fac17b143)
    XCTAssertTrue(TEST1a("chongo <Landon Curt Noll> /\\../\\") == 0x2c8f4c9af81bcf06)
    XCTAssertTrue(TEST1a0("chongo <Landon Curt Noll> /\\../\\") == 0xd34e31539740c732)
    XCTAssertTrue(TEST1a("chongo (Landon Curt Noll) /\\../\\") == 0x3605a2ac253d2db1)
    XCTAssertTrue(TEST1a0("chongo (Landon Curt Noll) /\\../\\") == 0x08c11b8346f4a3c3)
    XCTAssertTrue(TEST1a("http://antwrp.gsfc.nasa.gov/apod/astropix.html") == 0x6be396289ce8a6da)
    XCTAssertTrue(TEST1a("http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash") == 0xd9b957fb7fe794c5)
    XCTAssertTrue(TEST1a("http://epod.usra.edu/") == 0x05be33da04560a93)
    XCTAssertTrue(TEST1a("http://exoplanet.eu/") == 0x0957f1577ba9747c)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/cam3/") == 0xda2cc3acc24fba57)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/cams/HMcam/") == 0x74136f185b29e7f0)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/kilauea/update/deformation.html") == 0xb2f2b4590edb93b2)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/kilauea/update/images.html") == 0xb3608fce8b86ae04)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/kilauea/update/maps.html") == 0x4a3a865079359063)
    XCTAssertTrue(TEST1a("http://hvo.wr.usgs.gov/volcanowatch/current_issue.html") == 0x5b3a7ef496880a50)
    XCTAssertTrue(TEST1a("http://neo.jpl.nasa.gov/risk/") == 0x48fae3163854c23b)
    XCTAssertTrue(TEST1a("http://norvig.com/21-days.html") == 0x07aaa640476e0b9a)
    XCTAssertTrue(TEST1a("http://primes.utm.edu/curios/home.php") == 0x2f653656383a687d)
    XCTAssertTrue(TEST1a("http://slashdot.org/") == 0xa1031f8e7599d79c)
    XCTAssertTrue(TEST1a("http://tux.wr.usgs.gov/Maps/155.25-19.5.html") == 0xa31908178ff92477)
    XCTAssertTrue(TEST1a("http://volcano.wr.usgs.gov/kilaueastatus.php") == 0x097edf3c14c3fb83)
    XCTAssertTrue(TEST1a("http://www.avo.alaska.edu/activity/Redoubt.php") == 0xb51ca83feaa0971b)
    XCTAssertTrue(TEST1a("http://www.dilbert.com/fast/") == 0xdd3c0d96d784f2e9)
    XCTAssertTrue(TEST1a("http://www.fourmilab.ch/gravitation/orbits/") == 0x86cd26a9ea767d78)
    XCTAssertTrue(TEST1a("http://www.fpoa.net/") == 0xe6b215ff54a30c18)
    XCTAssertTrue(TEST1a("http://www.ioccc.org/index.html") == 0xec5b06a1c5531093)
    XCTAssertTrue(TEST1a("http://www.isthe.com/cgi-bin/number.cgi") == 0x45665a929f9ec5e5)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/bio.html") == 0x8c7609b4a9f10907)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/index.html") == 0x89aac3a491f0d729)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/src/calc/lucas-calc") == 0x32ce6b26e0f4a403)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/astro/venus2004.html") == 0x614ab44e02b53e01)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/astro/vita.html") == 0xfa6472eb6eef3290)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/comp/c/expert.html") == 0x9e5d75eb1948eb6a)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/comp/calc/index.html") == 0xb6d12ad4a8671852)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/comp/fnv/index.html") == 0x88826f56eba07af1)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/math/number/howhigh.html") == 0x44535bf2645bc0fd)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/math/number/number.html") == 0x169388ffc21e3728)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/math/prime/mersenne.html") == 0xf68aac9e396d8224)
    XCTAssertTrue(TEST1a("http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest") == 0x8e87d7e7472b3883)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/cgi-bin/corpspeak.cgi") == 0x295c26caa8b423de)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/cgi-bin/haiku.cgi") == 0x322c814292e72176)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/cgi-bin/rand-none.cgi") == 0x8a06550eb8af7268)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/cgi-bin/randdist.cgi") == 0xef86d60e661bcf71)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/index.html") == 0x9e5426c87f30ee54)
    XCTAssertTrue(TEST1a("http://www.lavarnd.org/what/nist-test.html") == 0xf1ea8aa826fd047e)
    XCTAssertTrue(TEST1a("http://www.macosxhints.com/") == 0x0babaf9a642cb769)
    XCTAssertTrue(TEST1a("http://www.mellis.com/") == 0x4b3341d4068d012e)
    XCTAssertTrue(TEST1a("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm") == 0xd15605cbc30a335c)
    XCTAssertTrue(TEST1a("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm") == 0x5b21060aed8412e5)
    XCTAssertTrue(TEST1a("http://www.paulnoll.com/") == 0x45e2cda1ce6f4227)
    XCTAssertTrue(TEST1a("http://www.pepysdiary.com/") == 0x50ae3745033ad7d4)
    XCTAssertTrue(TEST1a("http://www.sciencenews.org/index/home/activity/view") == 0xaa4588ced46bf414)
    XCTAssertTrue(TEST1a("http://www.skyandtelescope.com/") == 0xc1b0056c4a95467e)
    XCTAssertTrue(TEST1a("http://www.sput.nl/~rob/sirius.html") == 0x56576a71de8b4089)
    XCTAssertTrue(TEST1a("http://www.systemexperts.com/") == 0xbf20965fa6dc927e)
    XCTAssertTrue(TEST1a("http://www.tq-international.com/phpBB3/index.php") == 0x569f8383c2040882)
    XCTAssertTrue(TEST1a("http://www.travelquesttours.com/index.htm") == 0xe1e772fba08feca0)
    XCTAssertTrue(TEST1a("http://www.wunderground.com/global/stations/89606.html") == 0x4ced94af97138ac4)
    XCTAssertTrue(TEST1a("21701",10) == 0xc4112ffb337a82fb)
    XCTAssertTrue(TEST1a("M21701",10) == 0xd64a4fd41de38b7d)
    XCTAssertTrue(TEST1a("2^21701-1",10) == 0x4cfc32329edebcbb)
    XCTAssertTrue(TEST1aA([0x54, 0xc5],10) == 0x0803564445050395)
    XCTAssertTrue(TEST1aA([0xc5, 0x54],10) == 0xaa1574ecf4642ffd)
    XCTAssertTrue(TEST1a("23209",10) == 0x694bc4e54cc315f9)
    XCTAssertTrue(TEST1a("M23209",10) == 0xa3d7cb273b011721)
    XCTAssertTrue(TEST1a("2^23209-1",10) == 0x577c2f8b6115bfa5)
    XCTAssertTrue(TEST1aA([0x5a, 0xa9],10) == 0xb7ec8c1a769fb4c1)
    XCTAssertTrue(TEST1aA([0xa9, 0x5a],10) == 0x5d5cfce63359ab19)
    XCTAssertTrue(TEST1a("391581216093",10) == 0x33b96c3cd65b5f71)
    XCTAssertTrue(TEST1a("391581*2^216093-1",10) == 0xd845097780602bb9)
    XCTAssertTrue(TEST1aA([0x05, 0xf9, 0x9d, 0x03, 0x4c, 0x81],10) == 0x84d47645d02da3d5)
    XCTAssertTrue(TEST1a("FEDCBA9876543210",10) == 0x83544f33b58773a5)
    XCTAssertTrue(TEST1aA([0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10],10) == 0x9175cbb2160836c5)
    XCTAssertTrue(TEST1a("EFCDAB8967452301",10) == 0xc71b3bc175e72bc5)
    XCTAssertTrue(TEST1aA([0xef, 0xcd, 0xab, 0x89, 0x67, 0x45, 0x23, 0x01],10) == 0x636806ac222ec985)
    XCTAssertTrue(TEST1a("0123456789ABCDEF",10) == 0xb6ef0e6950f52ed5)
    XCTAssertTrue(TEST1aA([0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef],10) == 0xead3d8a0f3dfdaa5)
    XCTAssertTrue(TEST1a("1032547698BADCFE",10) == 0x922908fe9a861ba5)
    XCTAssertTrue(TEST1aA([0x10, 0x32, 0x54, 0x76, 0x98, 0xba, 0xdc, 0xfe],10) == 0x6d4821de275fd5c5)
    XCTAssertTrue(TEST1aA([0x00],500) == 0x1fe3fce62bd816b5)
    XCTAssertTrue(TEST1aA([0x07],500) == 0xc23e9fccd6f70591)
    XCTAssertTrue(TEST1a("~",500) == 0xc1af12bdfe16b5b5)
    XCTAssertTrue(TEST1aA([0x7f],500) == 0x39e9f18f2f85e221)
}
}


